{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","Section","flex","fd","ai","test","Divider","TextTitle","p","TextDescription","HeaderElem","Header","props","nftName","nftCaption","StyledButton","button","StyledRoundButton","StyledImg","img","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","successFeedback","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","NFT_CAPTION","style","overflowY","padding","justifyContent","textAlign","color","target","href","NFT_OVERVIEW","background","minHeight","fontSize","fontWeight","alt","src","Number","jc","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af967aca.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: white;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  overflow: hidden;  \n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 1)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const Divider = styled.div`\n  width: 0.22em;\n  background-color: #000000;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const HeaderElem = styled.div`\n  background-color: var(--accent);\n  min-height: 150px;\n  display: flex;\n  flex-direction: column;\n  color: var(--accent-text);\n  justify-content: center;\n  text-align: center;\n\n  h1 {\n    font-size: 48px;\n    font-style: bold;\n  }\n\n  h2 {\n    font-size: 24px;\n    padding-top: 10px;\n  }\n`;\n\nconst Header = (props) => {\n    return (\n        <HeaderElem>\n            <h1>{props.nftName}</h1>\n            <h2>{props.nftCaption}</h2>\n        </HeaderElem>\n    )\n}\n\nexport default Header;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Header from \"./Header\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 180px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--secondary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 320px;\n  }\n  @media (min-width: 1000px) {\n    width: 420px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Multiple NFTs can be minted at once.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const successFeedback = <p>Congrats!!! The {CONFIG.NFT_NAME} is yours!</p>;\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(successFeedback);\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 5) {\n      newMintAmount = 5;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <>\n      <s.Screen>\n        <Header nftName={CONFIG.NFT_NAME} nftCaption={CONFIG.NFT_CAPTION} />\n        <s.Container>\n          {/* Info Section Starts */}\n          <s.Section\n            style={{\n              overflowY: \"auto\",\n              padding: \"30px\"\n            }}\n          >\n            {/* Links to Opensea and blockchain */}\n            <s.Container style={{\n              justifyContent: \"space-between\"\n            }}>\n              <s.TextDescription\n                style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n              >\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                View on {\" \"}{CONFIG.MARKETPLACE}\n                </StyledLink>\n              </s.TextDescription>\n              <s.TextDescription\n                style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n              >\n                <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                View on {\" \"}{CONFIG.NETWORK.NAME}\n                </StyledLink>\n              </s.TextDescription>\n            </s.Container>\n            <s.SpacerLarge />\n            {/* NFT overview */}\n            <s.TextTitle>\n              {CONFIG.NFT_NAME}\n            </s.TextTitle>\n            <s.SpacerXSmall />\n            <s.TextDescription>\n              {CONFIG.NFT_OVERVIEW}\n            </s.TextDescription>\n            <s.SpacerLarge />\n            {/* Instructions & Notes */}\n            <s.TextTitle>\n              Please Note\n            </s.TextTitle>\n            <s.TextDescription>\n              Make sure you are connected to the right network (\n              {CONFIG.NETWORK.NAME}) and the correct address.\n            </s.TextDescription>\n            <s.SpacerXSmall />\n            <s.TextDescription>\n              Once you make the purchase, you cannot undo this action.\n            </s.TextDescription>\n            <s.SpacerXSmall />\n            <s.TextDescription>\n              We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n              successfully mint your NFT. We recommend that you don't lower the\n              gas limit.\n            </s.TextDescription>\n            <s.SpacerXSmall />\n            <s.TextDescription>\n              The Mint price mentioned doesn't include Gas Fee.\n            </s.TextDescription>\n            <s.SpacerXSmall />\n          </s.Section>\n          {/* Info Section Ends */}\n          <s.Divider />\n          {/* Mint Section Starts */}\n          <s.Section\n            ai=\"center\"\n            style={{\n              background: \"var(--primary)\",\n              minHeight: \"calc(100vh - 150px)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n\n            {/* NFT image */}\n            <s.SpacerXSmall />\n            <StyledImg \n              alt={\"God's Eye\"}\n              src={\"logo512.png\"}\n            />\n            <s.SpacerXSmall />\n            <s.TextTitle\n              style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n            >\n              1 {CONFIG.NFT_NAME} costs {CONFIG.DISPLAY_COST}{\" \"}\n              {CONFIG.NETWORK.SYMBOL}\n            </s.TextTitle>\n            <s.SpacerSmall />\n\n            {/* Actions */}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <s.TextTitle\n                style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n              >\n                The sale has ended.\n              </s.TextTitle>\n            ) : (\n              <>\n                {/* Connect Wallet */}\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Section ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--primary-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerLarge />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--primary-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Section>\n                ) : (\n                  <>\n                    {/* Mint */}\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--primary-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.Section ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--primary-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Section>\n                    <s.SpacerSmall />\n                    <s.Section ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? `MINTING ${mintAmount} God's Eye` : `MINT ${mintAmount} God's Eye`}\n                      </StyledButton>\n                    </s.Section>\n                  </>\n                )}\n              </>\n            )} \n            <s.SpacerLarge />   \n          <s.SpacerLarge />\n            <s.SpacerLarge />   \n          </s.Section>\n          {/* Mint Section Ends */}\n        </s.Container>\n      </s.Screen>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}